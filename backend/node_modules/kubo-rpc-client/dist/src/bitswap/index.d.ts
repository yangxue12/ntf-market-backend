/**
 * @param {import('../types').Options} config
 */
export function createBitswap(config: import('../types').Options): {
    /**
     * TODO: https://github.com/ipfs/js-kubo-rpc-client/issues/99
     */
    wantlist: (options?: (import("ipfs-core-types/src/utils.js").AbortOptions & import("../types").HTTPClientExtraOptions) | undefined) => Promise<import("multiformats/dist/types/src/cid.js").CID<unknown, number, number, import("multiformats").Version>[]>;
    wantlistForPeer: (peerId: import("@libp2p/interface-peer-id").PeerId, options?: (import("ipfs-core-types/src/utils.js").AbortOptions & import("../types").HTTPClientExtraOptions) | undefined) => Promise<import("multiformats/dist/types/src/cid.js").CID<unknown, number, number, import("multiformats").Version>[]>;
    stat: (options?: (import("ipfs-core-types/src/utils.js").AbortOptions & import("../types").HTTPClientExtraOptions) | undefined) => Promise<import("ipfs-core-types/src/bitswap/index.js").Stats>;
};
//# sourceMappingURL=index.d.ts.map